// This is just an example,
// so you can safely delete all default props below

export default {
  lang: 'en',
  appName: 'TOFI platform',
  appMonitoringName: 'Monitoring of industrial reservoirs',
  company: 'LLP "Systems research company "Factor"',

  chooseLanguage: 'Language selection',
  mainPage: 'Main page',
  logIn: 'Login',
  logOut: 'Logout',
  browserDenied: 'Browser denied file download...',

  notLogined: 'Login required',
  notAccess: 'You do not have access rights',

  networkError: 'Network Error',
  loginExists: 'User with this login already exists',
  invalidLoginPasswd: 'Username or password is incorrect',
  invalidOldPasswd: 'Wrong old password',
  usrName: 'Name',
  usrFullName: 'Full name',
  changePsw: 'Change password',
  email: 'Email',
  phone: 'Phone number',
  passwd: 'Password',
  login: 'Login',
  locked: 'Blocked',
  forgotPsw: 'Forgot your password?',

  //Dialog
  confirmation: 'Confirmation',
  deletingRecord: 'Deleting record',
  chooseRecord: 'Choose record',
  deleteRecord: 'Delete record?',
  delete: 'Delete',
  editRecord: 'Edit record',
  updRecord: 'Edit record',
  update: 'Edit',
  newRecord: 'New record',
  msgToFile: 'Export to file',
  txt_filter: 'Filter',
  req: 'Required field',
  validEml: 'Invalid email',
  errorPassword: 'Passwords do not match',
  selectedRow: 'Selected row',
  selectedNode: 'Selected node',
  notChosen: 'Not chosen',
  deletingFile: 'Deleting file',
  deleteFile: 'Delete file?',

  up: 'Up',
  down: 'Down',
  addRecord: 'Add entry',

  onAll: 'Turn on everything',
  offAll: 'Turn off everything',
  countAll: 'Total',

  fldDbeg: 'Life interval start',
  fldDend: 'Life interval end',
  fldDbegShort: 'Start',
  fldDendShort: 'End',
  select: 'Select...',
  parentObj: 'Parent object',
  noChilds: 'No children',
  noResult: 'No results found...',

  parent: 'Parent',
  isReq: 'Required',
  isUniq: 'Unambiguous',

  next: 'Next',
  save: 'Save',
  cancel: 'Cancel',
  canceled: 'Action canceled',
  close: 'Close',
  infoRow: 'To change or delete, select the appropriate line',
  infoViewRow: 'To view select the appropriate line',
  expandAll: 'Expand all',
  collapseAll: 'Collapse all',
  expand: 'Expand',
  collapse: 'Collapse',
  val: 'Value',
  code: 'Code',
  fldName: 'Name',
  fldFullName: 'Full name',
  fldCmt: 'Comment',
  fldCmtShort: 'Comment',
  accessLevel: 'Access level',
  fileName: 'File Name',
  infoRowExt: 'To change, delete or attach file, select the appropriate line',

  msgCodeGen: 'Generated if empty',
  hasValue: 'There is a value...',
  NotFoundPossibleValues: 'Possible values not specified',
  menu: 'Menu',
  description: 'Description',
  NotFoundCod: 'Code not found',
  noResults: 'Нәтиже жоқ',
  yes: 'Yes',
  no: 'No',
  refresh: 'Refresh',
  failed: 'Action failed',
  success: 'Action was successful',
  download: 'Download',

  typesOfFish: 'Types of fish',
  typeOfFish: 'Type of fish',
  reservoirs: 'Reservoirs',
  reservoir: 'Reservoir',
  piscesInReservoirs: 'Pisces in reservoirs',
  sampling: 'Sampling',
  samplingResults: 'Sampling results',
  samplingStations: 'Sampling stations',
  fishingArea: 'Place (Fishing area, site)',
  fisArea: 'Place',
  enterprise: 'Enterprise',

  addRegion: 'Add the region',
  addDistrict: 'Add the district',
  region: 'Region',
  branch: 'Branch',
  district: 'District',
  nameCls: 'Type of gun',
  attached_files: 'Attached files',
  attach_file: 'Attach the file',
  view: 'View',
  hasChild: 'There is a subsidiary',

  vidWaterObject: 'Type of water object',
  vidReservoir: 'Kind of reservoir',
  typeReservoir: 'Type of reservoir',
  statusReservoir: 'The status of a reservoir',
  other_props: 'Other properties',

  location: 'Location',
  coordinates: 'Coordinates',
  reservoirWidth: 'The width of the reservoir, m',
  reservoirDepth: 'The depth of the reservoir, m',
  max: 'Maximum value',
  avg: 'Average value',
  min: 'Minimum value',
  ReservoirDepthMax: 'The depth of the reservoir (max)',
  ReservoirDepthAvg: 'The depth of the reservoir (avg)',
  ReservoirDepthMin: 'The depth of the reservoir (min)',
  ReservoirWidthMax: 'The width of the reservoir (max)',
  ReservoirWidthAvg: 'The width of the reservoir (avg)',
  ReservoirWidthMin: 'The width of the reservoir (min)',
  WaterArea: 'Square, sq. km',
  WaterLength: 'Length, km',
  CurrentSpeed: 'The speed of the current, m/s',
  SplitLife: 'Cannot split life span',
  ExistsValueOnDate: 'There is a value on the specified date',
  PropAreaOfTon: "Area of the ton, ha",
  PropAreaOfTonShort: "Area, ha",

  reservoirDepth_maxGRavg: 'Error (The depth of the reservoir): maximum value >= average value',
  reservoirDepth_maxGRmin: 'Error (The depth of the reservoir): maximum value >= minimum value',
  reservoirDepth_avgGRmin: 'Error (The depth of the reservoir): average value >= minimum value',
  reservoirDepth_maxGRavgGRmin:
    'Error (The depth of the reservoir): maximum value >= average value >= minimum value',

  reservoirWidth_maxGRavg: 'Error (The width of the reservoir): maximum value >= average value',
  reservoirWidth_maxGRmin: 'Error (The width of the reservoir): maximum value >= minimum value',
  reservoirWidth_avgGRmin: 'Error (The width of the reservoir): average value >= minimum value',
  reservoirWidth_maxGRavgGRmin:
    'Error (The width of the reservoir): maximum value >= average value >= minimum value',

  WaterAreaFishing: 'Fishing zone area, ha',
  WaterAreaLittoral: 'Litoral zone area, ha',
  ReservoirHydroLevel: 'Hydrological level of the reservoir (mBS)',

  fishFamily: 'Family of fish',
  fishFarmingType: 'Type of fishing',
  SampleNumberExists: 'The number of the sample should be unique',
  ResearchNumberExists: 'The number of the research should be unique',

  ResearchNumber: 'Research number',
  ResearchDate: 'Date of research',

  FishAge: 'Age',
  FishWeight: 'Weight',
  FishLength: 'Length',

  FishGear: 'Fishing tools',
  FishGender: 'Fish Gender',

  research: 'Research',
  researchResults: 'Research results',

  test: 'Заливка',

  nameDoc: 'The name of the document',
  numberDoc: 'Document number',
  authorDoc: 'The author of the document',
  numberOrder: 'Order number',
  dateApproval: 'The date of approval',
  lifeDoc: 'Expiration date',
  invalidLifeDoc: 'The date of approval cannot be later than the date of the validity period',
  date: 'Date',
  fish_model: "Fisheries stock assessment model",

  existsSampling: "There is a sample collection",
  existsResSampling: "There is a sample collection result",
  exists: "Exists",
  add: 'Add',
  addChild: 'Add child',
  analysis: "Analysis",
  periodType: "Period type",
  period: "Period",
  countPeriod: "Number of periods",
  countFish: "Number of fish",
  massaFish: "Average fish weight (grams)",
  countFishFull: "Number of fish subjected to biological analysis by periods",
  massaFishFull: "Average weight of fish (grams) subjected to biological analysis by periods",
  sexFishRatio: "Fish sex ratios, in percentages",
  gridModeCount: "Quantitative ratio of fish",
  gridModeMassa: "Weight ratio of fish",

  nothing_here: 'Oops. Nothing Here...',
  home: 'Home',
}
